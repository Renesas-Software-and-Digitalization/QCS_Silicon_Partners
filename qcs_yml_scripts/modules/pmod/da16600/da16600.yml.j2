  - op: change_property
    type: common
    module_or_thread: {{wifi_stack_name}}
    id: config.driver.wifi_da16xxx.enable_da16600_support
    value: config.driver.wifi_da16xxx.enable_da16600_support.enabled
    name: sntp_enable      

  - op: change_property
    type: common
    module_or_thread: {{wifi_stack_name}}
    id: config.driver.wifi_da16xxx.enable_sntp_client
    value: config.driver.wifi_da16xxx.enable_sntp_client.enabled
    name: sntp_enable      
    
  - op: change_property
    type: instance
    module_or_thread: {{wifi_stack_name}}
    id: module.driver.wifi_da16xxx.sntp_server_ip
    value: 216.239.35.0
    name: sntp_ip_addr

  - op: change_property
    type: instance
    module_or_thread: {{wifi_stack_name}}
    id: module.driver.wifi_da16xxx.sntp_utc_offset_in_hours
    value: module.driver.wifi_da16xxx.sntp_utc_offset_in_hours.-8
    name: sntp_tz_offset     

  - op: find_module
    name: transport_uart
    module: {{mqtt_stack_name}}
    requires_id: module.driver.wifi_da16xxx.requires.at_transport_da16xxx
    
  - op: change_property
    type: common
    module_or_thread: transport_uart
    id: config.driver.at_transport_da16xxx.pin_control_port
    value: config.driver.at_transport_da16xxx.pin_control_port.PORT_{{"%02d" | format(pmod_conn_reset[1] | int(10)) }}
    name: reset_port
    
  - op: change_property
    type: common
    module_or_thread: transport_uart
    id: config.driver.at_transport_da16xxx.pin_control_pin
    value: config.driver.at_transport_da16xxx.pin_control_pin.PIN_{{pmod_conn_reset[-2:]}}
    name: reset_pin

  - op: find_module
    name: pmod2_uart
    module: mqtt
    requires_id: module.driver.at_transport_da16xxx_uart.requires.uart

{% if pmod_conn_uart.type == "sci_uart" %}
  - op: fill_requires
    name: dtc0
    module: pmod2_uart
    requires_id: module.driver.uart_on_sci_uart.requires.transfer_tx
    module_id: module.driver.transfer_on_dtc
  - op: change_property
    type: common
    module_or_thread: pmod2_uart
    id: config.driver.sci_uart.dtc_support
    value: config.driver.sci_uart.dtc_support.enabled
    name: uart_dtc_support  
  - op: change_property
    type: common
    module_or_thread: pmod2_uart
    id: config.driver.sci_uart.flow_control
    value: config.driver.sci_uart.flow_control.enabled
    name: uart_flow_support
{% endif %}  

{% if pmod_conn_uart.type == "sci_b_uart" %}
  - op: fill_requires
    name: dtc0
    module: pmod2_uart
    requires_id: module.driver.uart_on_sci_b_uart.requires.transfer_tx
    module_id: module.driver.transfer_on_dtc
  - op: change_property
    type: common
    module_or_thread: pmod2_uart
    id: config.driver.sci_b_uart.dtc_support
    value: config.driver.sci_b_uart.dtc_support.enabled
    name: uart_dtc_support  
  - op: change_property
    type: common
    module_or_thread: pmod2_uart
    id: config.driver.sci_b_uart.flow_control
    value: config.driver.sci_b_uart.flow_control.enabled
    name: uart_flow_support
{% endif %}   

  - op: change_property
    type: instance
    module_or_thread: pmod2_uart
    id: module.driver.uart.rx_fifo_trigger
    value: module.driver.uart.rx_fifo_trigger.one
    name: uart_stack_fifo_trigger  
  - op: change_property
    type: instance
    module_or_thread: pmod2_uart
    id: module.driver.uart.channel
    value: {{pmod_conn_uart.channel[-1]}}
    name: uart_channel 

{% include mcu_path + '/' + 'templates' + '/' + conn_module.interface + '.yml.j2' %}