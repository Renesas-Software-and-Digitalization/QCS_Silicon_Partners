# Having a root element is how the script can figure out if this YML file is a template or flat list of projectsj
templates:
  # Can have more than 1 template defined in this file. You can also define these in separate files.

    # Path to the jinja2 template to use. The data in this file will be used to fill in the template.
  - template: scripts/xml_testing/default_module.yml.j2

    # List of RTOSs.
    rtoses:
        # Each RTOS name does not have to match full RTOS string. The text will be checked to be contained in the official RTOS string.
      - name: No RTOS
        # The template names must match exactly.
        template: Bare Metal - Minimal
      - name: FreeRTOS
        template: FreeRTOS - Minimal - Static Allocation
      - name: Azure
        template: Azure RTOS ThreadX - Minimal
    # OPTIONAL board list. If this list does not exist then default list will be parsed by reading the pack definition files release_packs.xml and internal_packs.xml
    # List of boards to create projects for. Each board will have 1 project created per RTOS under rtoses.
    boards:
      # Names must exactly match names in board list.
      - EK-RA2A1
      - EK-RA2E1
      - EK-RA2L1
      - EK-RA6M1
      - EK-RA6M2
      - EK-RA6M3
      - EK-RA6M4
      - EK-RA6M5
      - RSSK-RA6T1
      - EK-RA4M1
      - EK-RA4M2
      - EK-RA4M3
      - EK-RA4W1
      # Also supports part numbers
      - R7FA2E2A74CNK

    # OPTIONAL toolchain list. If this list does not exist then default list will be used from 'scripts/xml_testing/create_module_test_list.py'
    # List of toolchains to create projects for.
    toolchains:
      - gcc
      - iar
      - ac6

    # This is a dictionary of extra data that will be sent to the templating engine. Whatever keys are in this dictionary will be directly sent to the template.
    template_data:
      # This will be added to project name to avoid duplicates
      name: adc
      # This template will create blank project and then add a module instance using the provided module ID.
      module_id: module.driver.adc_on_adc
      # This will replace string in entry source file so we can actually call open of the module
      todo_replacement: |
        fsp_err_t err;
        FSP_PARAMETER_NOT_USED(err);
        err = R_ADC_Open(&g_adc0_ctrl, &g_adc0_cfg);
